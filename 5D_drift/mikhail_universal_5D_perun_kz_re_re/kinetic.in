#####################################################
# Verbosity Definitions
#####################################################
simulation.verbosity = 10
gksystem.verbosity   = 10
gksystem.hdf_density = true
gksystem.hdf_potential = true
#gksystem.hdf_temperature = true
#gksystem.hdf_dfn = true
gksystem.hdf_efield = true
gksystem.hdf_vparmu = true
#gksystem.hdf_ParallelMomentum = true
#gksystem.hdf_PoloidalMomentum = true
gksystem.fixed_plot_indices = 2 0 0 6 2

gksystem.ti_class = "rk"
gksystem.ti_method = "4"
#####################################################
# Time Stepping Definitions
#####################################################
simulation.max_step            = 10000
simulation.max_time            = 100000.0
#simulation.max_dt_grow         = 1.1
simulation.initial_dt_fraction = 1.0
simulation.cfl_number          = 0.9
#simulation.fixed_dt           = 0.00024
#simulation.fixed_dt_subiteration  = true
##simulation.fixed_dt           = 0.001
simulation.checkpoint_interval = 400
simulation.checkpoint_prefix   = "chk"
#simulation.restart_file = "chk2000.4d.hdf5"
simulation.plot_interval       = 20
simulation.plot_prefix         = "plt"
simulation.histories = true
simulation.1.history_field = "potential"
simulation.1.history_indices = 6 16 8


#####################################################
# Computational Grid Definitions
#####################################################
#gksystem.num_cells   = 64 64 16 36 24
gksystem.num_cells   = 12 32 16 64 48
gksystem.is_periodic = 0  1  1  0  0

#gksystem.configuration_decomp = 4 4
#gksystem.velocity_decomp      =     3 3
#gksystem.phase_decomp         = 4 4 3 3

gksystem.configuration_decomp = 1 4 2
gksystem.velocity_decomp      =       8 4
gksystem.phase_decomp         = 1 4 2 8 4

#####################################################
# Units Definitions
#####################################################
units.number_density = 1.0e20
units.temperature    = 400.0
units.length         = 1.0
units.mass           = 1.0
units.magnetic_field = 1.0 

#####################################################
# Magnetic Geometry Definitions
#####################################################
##slab
gksystem.magnetic_geometry_mapping = "Slab"
gksystem.magnetic_geometry_mapping.slab.verbose  = true
gksystem.magnetic_geometry_mapping.slab.visit_plotfile  = "SlabViz"
gksystem.magnetic_geometry_mapping.slab.num_quad_points = 5
gksystem.magnetic_geometry_mapping.slab.axisymmetric = false
gksystem.magnetic_geometry_mapping.slab.x_max = 0.008
gksystem.magnetic_geometry_mapping.slab.y_max = 0.008
gksystem.magnetic_geometry_mapping.slab.z_max = 2.4
gksystem.magnetic_geometry_mapping.slab.Bz_inner = 3.0
gksystem.magnetic_geometry_mapping.slab.Bz_outer = 3.0
gksystem.magnetic_geometry_mapping.slab.By_inner = 0.0


##miller
#gksystem.magnetic_geometry_mapping = "Miller"
#gksystem.magnetic_geometry_mapping.miller.verbose  = true
#gksystem.magnetic_geometry_mapping.miller.visit_plotfile  = "MillerViz"
#gksystem.magnetic_geometry_mapping.miller.num_quad_points = 5
#gksystem.magnetic_geometry_mapping.miller.inner_radial_bdry = 0.1
#gksystem.magnetic_geometry_mapping.miller.outer_radial_bdry = 0.9
##gksystem.magnetic_geometry_mapping.miller.inner_radial_bdry = 0.324980503407
##gksystem.magnetic_geometry_mapping.miller.outer_radial_bdry = 0.359019496593
#gksystem.magnetic_geometry_mapping.miller.kappa   = 1.
#gksystem.magnetic_geometry_mapping.miller.delta   = 0.
##gksystem.magnetic_geometry_mapping.miller.dpsidr  = 2.04
#gksystem.magnetic_geometry_mapping.miller.dpsidr  = 1.71
#gksystem.magnetic_geometry_mapping.miller.drR0    = 0.
#gksystem.magnetic_geometry_mapping.miller.s_kappa = 0.0
#gksystem.magnetic_geometry_mapping.miller.s_delta = 0.0
#gksystem.magnetic_geometry_mapping.miller.origin  = 1.7 0.
#gksystem.magnetic_geometry_mapping.miller.Btor_scale  = 25.65
##gksystem.magnetic_geometry_mapping.miller.l_const_minorrad  = 1



#####################################################
# Phase Space Geometry Definitions
#####################################################
phase_space_mapping.v_parallel_max = 5.0
phase_space_mapping.mu_max = 5.0
phase_space_mapping.second_order = true
phase_space_mapping.velocity_type = "gyrokinetic"

#phase_space_mapping.velocity_type = "ExB"
#phase_space_mapping.velocity_type = "annular_poloidal_velocity"
#phase_space_mapping.velocity_type = "annular_radial_velocity"
#phase_space_mapping.velocity_type = "annular_radpol_velocity"
#phase_space_mapping.no_drifts = false
#phase_space_mapping.physical_velocity_components = true


#####################################################
# Vlasov Operator Definitions
#####################################################
gkvlasov.verbose = true
gkvlasov.time_step_diagnostics = true

#gkvlasov.face_avg_type = uw1
gkvlasov.face_avg_type = uw3
#gkvlasov.face_avg_type = uw5
#gkvlasov.face_avg_type = weno5
#gkvlasov.face_avg_type = bweno

#####################################################
# Poisson Operator Definitions
#####################################################
gksystem.fixed_efield = false
gkpoisson.verbose = true

#gksystem.ampere_law =  true
#gksystem.ampere_cold_electrons = false

gkpoissonboltzmann.verbose = true
#gkpoissonboltzmann.preserve_initial_ni_average = true
#gkpoissonboltzmann.nonlinear_relative_tolerance = 1.e-5
#gkpoissonboltzmann.nonlinear_maximum_iterations = 20
#gkpoissonboltzmann.nonlinear_change_tolerance = 1.e-5
#gkpoissonboltzmann.jacobian_solve_tolerance = 1.e-4
#gkpoissonboltzmann.subspace_iteration_solve = true

#gkpoissonboltzmann.prefactor = global_neutrality
#gkpoissonboltzmann.prefactor = global_neutrality_initial
#gkpoissonboltzmann.prefactor = fs_neutrality
#gkpoissonboltzmann.prefactor = fs_neutrality_initial
#gkpoissonboltzmann.prefactor = fs_neutrality_global_ni
#gkpoissonboltzmann.prefactor = fs_neutrality_initial_fs_ni

gkpoissonboltzmann.second_order = true
gkpoisson.second_order = true
#####################################################
# Species Definitions
#####################################################
kinetic_species.1.name   = "hydrogen"
kinetic_species.1.mass   = 2.0
kinetic_species.1.charge = 1.0

#boltzmann_electron.name = "electron"
#boltzmann_electron.mass              = 1.000544
#boltzmann_electron.charge            = -1.0
#boltzmann_electron.temperature_shape = "uniform"
#boltzmann_electron.temperature       = 1.0


kinetic_species.2.name   = "electron"
kinetic_species.2.mass   = 0.01
kinetic_species.2.charge = -1.0
#kinetic_species.2.cls    = "Krook"

#####################################################
# Initial Condition Definitions
#####################################################
IC.potential.function = "zero_grid_func"
IC.hydrogen.function = "maxwellian_phase_func" 
IC.electron.function = "maxwellian_electron_phase_func"

#####################################################
# Boundary Condition Definitions
#####################################################
BC.hydrogen.radial_lower.function = "maxwellian_phase_func"
BC.hydrogen.radial_upper.function = "maxwellian_phase_func"
#BC.hydrogen.radial_inner.function = "maxwellian_phase_func"
#BC.hydrogen.radial_outer.function = "maxwellian_phase_func"
BC.hydrogen.poloidal_lower.function = "maxwellian_phase_func"
BC.hydrogen.poloidal_upper.function = "maxwellian_phase_func"
BC.hydrogen.toroidal_lower.function = "maxwellian_phase_func"
BC.hydrogen.toroidal_upper.function = "maxwellian_phase_func"
BC.hydrogen.vpar_lower.function = "maxwellian_phase_func"
BC.hydrogen.vpar_upper.function = "maxwellian_phase_func"
BC.hydrogen.mu_lower.function = "maxwellian_phase_func"
BC.hydrogen.mu_upper.function = "maxwellian_phase_func"

BC.electron.radial_lower.function = "maxwellian_electron_phase_func"
BC.electron.radial_upper.function = "maxwellian_electron_phase_func"
##BC.electron.radial_inner.function = "maxwellian_electron_phase_func"
##BC.electron.radial_outer.function = "maxwellian_electron_phase_func"
BC.electron.poloidal_lower.function = "maxwellian_electron_phase_func"
BC.electron.poloidal_upper.function = "maxwellian_electron_phase_func"
BC.electron.toroidal_lower.function = "maxwellian_electron_phase_func"
BC.electron.toroidal_upper.function = "maxwellian_electron_phase_func"
BC.electron.vpar_lower.function = "maxwellian_electron_phase_func"
BC.electron.vpar_upper.function = "maxwellian_electron_phase_func"
BC.electron.mu_lower.function = "maxwellian_electron_phase_func"
BC.electron.mu_upper.function = "maxwellian_electron_phase_func"

#BC.potential.radial_inner.type = "dirichlet"
#BC.potential.radial_outer.type = "dirichlet"
BC.potential.radial_lower.type = "dirichlet"
BC.potential.radial_upper.type = "dirichlet"
#BC.potential.radial_lower.type = "neumann"
#BC.potential.radial_upper.type = "neumann"
BC.potential.poloidal_lower.type = "neumann"
BC.potential.poloidal_upper.type = "neumann"
BC.potential.toroidal_lower.type = "neumann"
BC.potential.toroidal_upper.type = "neumann"

#####################################################
# Collisions Definitions
#####################################################
CLS.electron.cls_freq = 20.5
CLS.electron.conserve_momentum  = false
CLS.electron.conserve_particle = true
CLS.electron.ref_function = "maxwellian_electron_phase_func"
CLS.electron.ref_temperature = "T0_grid_func"


#####################################################
# Kinetic Function Definitions
#####################################################
kinetic_function_library.number = 2
kinetic_function_library.verbosity = 1
kinetic_function_library.list = "maxwellian_phase_func" "maxwellian_electron_phase_func"

kinetic_function_library.maxwellian_phase_func.type = "maxwellian"
kinetic_function_library.maxwellian_phase_func.vparallel.function = "Ion_vpar_grid_func"
kinetic_function_library.maxwellian_phase_func.density.function = "N0_grid_func" 
kinetic_function_library.maxwellian_phase_func.temperature.function = "T0_grid_func" 

kinetic_function_library.maxwellian_electron_phase_func.type = "maxwellian"
kinetic_function_library.maxwellian_electron_phase_func.vparallel.function = "ele_vpar_grid_func"
kinetic_function_library.maxwellian_electron_phase_func.density.function = "N0_grid_func" 
kinetic_function_library.maxwellian_electron_phase_func.temperature.function = "T0_grid_func" 

#####################################################
# Grid Function Definitions
#####################################################
grid_function_library.number = 7
grid_function_library.verbosity = 1
grid_function_library.list = "zero_grid_func" "T0_grid_func" "eT0_grid_func" "N0_grid_func" "eN0_grid_func" "Ion_vpar_grid_func" "ele_vpar_grid_func"

grid_function_library.zero_grid_func.type = "zero" 

#grid_function_library.T0_grid_func.type = "arbitrary"
#grid_function_library.T0_grid_func.function = "1.0"
grid_function_library.T0_grid_func.type = "constant"
grid_function_library.T0_grid_func.value = 1.0

#grid_function_library.eT0_grid_func.type = "arbitrary"
#grid_function_library.eT0_grid_func.function = "1.0"
grid_function_library.eT0_grid_func.type = "constant"
grid_function_library.eT0_grid_func.value = 1.0


#computational coordinate X runs 0 to 2pi. physical coordinate runs 0 to L.
#For exponentially decreasing density, one should use exp(-(x-pi)/(2*pi*delta/L)) 
grid_function_library.N0_grid_func.type = "arbitrary"
#grid_function_library.N0_grid_func.function = "1.0*exp(-(x-pi)/(2*pi*0.01/0.02))+0.001*cos(2*y)*exp(-(x-pi)/(2*pi*0.01/0.02))"
#grid_function_library.N0_grid_func.function = "(1.0+sin(x/2.0)*sin(x/2.0))*(1+0.001*cos(2*y))"
#grid_function_library.N0_grid_func.function = "(  1.0-0.05*tanh((x-pi)/(2*pi*0.2)) )*(1+0.0001*cos(y)*exp(-(x-pi)^2/(2*pi*0.02 ) )  )"
#grid_function_library.N0_grid_func.function = "(  1.0-0.05*tanh((x-pi)/(2*pi*10.0*0.02)))*(1+0.001*cos(y))"
grid_function_library.N0_grid_func.function = "exp(-x/(8.0*pi))+0.00001*sin(y+z)*sin(x/2.0)"

#grid_function_library.N0_grid_func.function = "(1+0.001*cos(2*y)*0.0)"
#grid_function_library.N0_grid_func.function = "(1.0+0.1*exp(-(x-pi)^2/(2*pi*0.001/0.02)))*(1+0.00001*cos(2*y))"
#grid_function_library.N0_grid_func.function = "(1.5-0.5*cos(x))*(1+0.001*cos(2*y))"
#grid_function_library.N0_grid_func.function = "1.0+0.5*exp(-(x-pi)/(2*pi*0.01/0.02))+0.02*exp(-(x-pi)^2/(2*pi*0.001/0.02))*cos(2*y)"



grid_function_library.eN0_grid_func.type = "arbitrary"
#grid_function_library.eN0_grid_func.function = "1.0+0.5*exp(-(x)/(pi))+0.01*exp(-(x-pi)^2/(0.1*PI))*cos(10*y)"
#grid_function_library.eN0_grid_func.function = "1.0*exp(-(x-pi)/(2*pi*0.01/0.02))"
#grid_function_library.eN0_grid_func.function = "(1.5-0.5*cos(x))*(1+0.001*cos(2*y))"
grid_function_library.eN0_grid_func.function = "(1.0+sin(x/2.0)*sin(x/2.0))*(1+0.001*cos(2*y))"

grid_function_library.Ion_vpar_grid_func.type = "constant"
grid_function_library.Ion_vpar_grid_func.value = 0.0

grid_function_library.ele_vpar_grid_func.type = "constant"
grid_function_library.ele_vpar_grid_func.value = 0.0

