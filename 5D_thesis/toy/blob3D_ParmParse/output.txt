 main 1
 main 2
 main 3
(N,1) simulation.verbosity ::  (=,10)
(N,1) gksystem.verbosity ::  (=,10)
(N,1) gksystem.hdf_density ::  (=,true)
(N,1) gksystem.hdf_potential ::  (=,true)
(N,1) gksystem.hdf_temperature ::  (=,true)
(N,1) gksystem.hdf_pressure ::  (=,true)
(N,1) gksystem.hdf_ParallelMomentum ::  (=,true)
(N,1) gksystem.hdf_dfn ::  (=,true)
(N,1) gksystem.hdf_efield ::  (=,true)
(N,1) gksystem.hdf_vparmu ::  (=,true)
(N,5) gksystem.fixed_plot_indices ::  (=,4) (=,4) (=,2) (=,4) (=,4)
(N,1) gksystem.ti_class ::  (=,rk)
(N,1) gksystem.ti_method ::  (=,4)
(N,1) simulation.max_step ::  (=,70)
(N,1) simulation.max_time ::  (=,100000.0)
(N,1) simulation.fixed_dt ::  (=,0.50)
(N,1) simulation.fixed_dt_subiteration ::  (=,true)
(N,1) simulation.checkpoint_interval ::  (=,100)
(N,1) simulation.checkpoint_prefix ::  (=,chk)
(N,1) simulation.plot_interval ::  (=,1)
(N,1) simulation.plot_prefix ::  (=,plt)
(N,1) simulation.histories ::  (=,true)
(N,1) simulation.1.history_field ::  (=,potential)
(N,3) simulation.1.history_indices ::  (=,4) (=,2) (=,2)
(N,5) gksystem.num_cells ::  (=,16) (=,16) (=,8) (=,16) (=,8)
(N,5) gksystem.is_periodic ::  (=,1) (=,1) (=,1) (=,0) (=,0)
(N,3) gksystem.configuration_decomp ::  (=,1) (=,1) (=,1)
(N,2) gksystem.velocity_decomp ::  (=,1) (=,1)
(N,5) gksystem.phase_decomp ::  (=,1) (=,1) (=,1) (=,1) (=,1)
(N,1) units.number_density ::  (=,1.0e20)
(N,1) units.temperature ::  (=,400.0)
(N,1)    units.length ::  (=,1.0)
(N,1)      units.mass ::  (=,1.0)
(N,1) units.magnetic_field ::  (=,1.0)
(N,1) gksystem.magnetic_geometry_mapping ::  (=,Slab)
(N,1) gksystem.magnetic_geometry_mapping.slab.verbose ::  (=,true)
(N,1) gksystem.magnetic_geometry_mapping.slab.visit_plotfile ::  (=,SlabViz)
(N,1) gksystem.magnetic_geometry_mapping.slab.num_quad_points ::  (=,5)
(N,1) gksystem.magnetic_geometry_mapping.slab.axisymmetric ::  (=,false)
(N,1) gksystem.magnetic_geometry_mapping.slab.x_max ::  (=,0.016)
(N,1) gksystem.magnetic_geometry_mapping.slab.y_max ::  (=,0.016)
(N,1) gksystem.magnetic_geometry_mapping.slab.z_max ::  (=,10.0)
(N,1) gksystem.magnetic_geometry_mapping.slab.Bz_inner ::  (=,3.0)
(N,1) gksystem.magnetic_geometry_mapping.slab.Bz_outer ::  (=,3.0)
(N,1) gksystem.magnetic_geometry_mapping.slab.By_inner ::  (=,0.0)
(N,1) gksystem.magnetic_geometry_mapping.plot_magnetic_field ::  (=,true)
(N,1) phase_space_mapping.v_parallel_max ::  (=,4.0)
(N,1) phase_space_mapping.mu_max ::  (=,3.0)
(N,1) phase_space_mapping.second_order ::  (=,true)
(N,1) phase_space_mapping.velocity_type ::  (=,gyrokinetic)
(N,1) gkvlasov.verbose ::  (=,true)
(N,1) gkvlasov.time_step_diagnostics ::  (=,true)
(N,1) gkvlasov.face_avg_type ::  (=,weno5)
(N,1) gksystem.fixed_efield ::  (=,true)
(N,1) gksystem.prescribed_efield ::  (=,false)
(N,1) gksystem.prescribed_efield.ER ::  (=,0.0)
(N,1) gksystem.prescribed_efield.EPhi ::  (=,0.0)
(N,1) gksystem.prescribed_efield.EZ ::  (=,0.0)
(N,1) gkpoisson.verbose ::  (=,true)
(N,1) gkpoisson.second_order ::  (=,true)
(N,1) gkpoissonboltzmann.second_order ::  (=,true)
(N,1) kinetic_species.1.name ::  (=,hydrogen)
(N,1) kinetic_species.1.mass ::  (=,1.0)
(N,1) kinetic_species.1.charge ::  (=,1.0)
(N,1) IC.potential.function ::  (=,potential_grid_func)
(N,1) IC.hydrogen.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.radial_lower.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.radial_upper.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.poloidal_lower.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.poloidal_upper.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.toroidal_lower.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.toroidal_upper.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.vpar_lower.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.vpar_upper.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.mu_lower.function ::  (=,maxwellian_phase_func)
(N,1) BC.hydrogen.mu_upper.function ::  (=,maxwellian_phase_func)
(N,1) BC.potential.radial_lower.type ::  (=,neumann)
(N,1) BC.potential.radial_upper.type ::  (=,neumann)
(N,1) BC.potential.poloidal_lower.type ::  (=,neumann)
(N,1) BC.potential.poloidal_upper.type ::  (=,neumann)
(N,1) BC.potential.toroidal_lower.type ::  (=,neumann)
(N,1) BC.potential.toroidal_upper.type ::  (=,neumann)
(N,1) kinetic_function_library.number ::  (=,1)
(N,1) kinetic_function_library.verbosity ::  (=,1)
(N,1) kinetic_function_library.list ::  (=,maxwellian_phase_func)
(N,1) kinetic_function_library.maxwellian_phase_func.type ::  (=,maxwellian)
(N,1) kinetic_function_library.maxwellian_phase_func.vparallel.function ::  (=,Ion_vpar_grid_func)
(N,1) kinetic_function_library.maxwellian_phase_func.density.function ::  (=,N0_grid_func)
(N,1) kinetic_function_library.maxwellian_phase_func.temperature.function ::  (=,T0_grid_func)
(N,1) grid_function_library.number ::  (=,4)
(N,1) grid_function_library.verbosity ::  (=,10)
(N,4) grid_function_library.list ::  (=,potential_grid_func) (=,T0_grid_func) (=,N0_grid_func) (=,Ion_vpar_grid_func)
(N,1) grid_function_library.potential_grid_func.type ::  (=,arbitrary)
(N,1) grid_function_library.potential_grid_func.function ::  (=,( 0.0))
(N,1) grid_function_library.T0_grid_func.type ::  (=,arbitrary)
(N,1) grid_function_library.T0_grid_func.function ::  (=,1.0)
(N,1) grid_function_library.N0_grid_func.type ::  (=,arbitrary)
(N,1) grid_function_library.N0_grid_func.function ::  (=,(1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2)))
(N,1) grid_function_library.Ion_vpar_grid_func.type ::  (=,constant)
(N,1) grid_function_library.Ion_vpar_grid_func.value ::  (=,0.0)
 main 4
 Simulation 1
m_verbosity = 10
m_max_step = 70
m_max_time = 100000
m_fixed_dt = 0.5
m_max_dt_grow = 1.1
m_initial_dt_fractiond = 0.1
m_cfl = 1
checkpoint interval = 100
checkpoint prefix = chk
plot interval = 1
plot frefix = plt
 Simulation 2
 PositivityPostProcessor 1
 GKSystem 1
 GKSystem 2
 GKUnits::GKUnits(ParmParse&) 1
** GKUnits ***********************************************************

==== Fundamental Units ===============================================
  NUMBER DENSITY    [1/m^3]: 1e+20
  TEMPERATURE           [eV]: 400
  LENGTH                [m]: 1
  MASS                 [AMU]: 1
  MAGNETIC FIELD        [T]: 1
  CHARGE                [C]: 1.60218e-19
  BOLTZMANN CONSTANT  [J/K]: 1.38065e-23
  ELECTRIC CONSTANT   [F/m]: 8.85419e-12
  MAGNETIC CONSTANT   [H/m]: 1.25664e-06

==== Derived Units ===================================================

  THERMAL SPEED       [m/s]: 195743
  TRANSIT TIME          [s]: 5.10874e-06
  MAGNETIC MOMENT     [J/T]: 3.20435e-17
  DIST. FUNCTION [s/(Am^6)]: 4244.15
  POTENTIAL             [V]: 400
  GYROFREQUENCY       [1/s]: 9.57883e+07
  GYRORADIUS            [m]: 0.0020435
  DEBYE LENGTH          [m]: 1.48679e-05

==== Dimensionless Parameters =========================================

  LARMOR NUMBER            : 0.0020435
  LARMOR NUMBER **2        : 4.17587e-06
  DEBYE NUMBER             : 1.48679e-05
  DEBYE NUMBER **2         : 2.21054e-10
  DEBYE NUMBER/MULT_FAC    : 1.48679e-05
  DEBYE NUMBER/MULT_FAC **2: 2.21054e-10

***********************************************************************
 GKSystem 3
 GKSystem 4
 MagBlockCoordSys::MagBlockCoordSys() 1
 m_verbose = 1
 m_axisymmetric = 0
 m_inner_radial_boundary = 0
 m_outer_radial_boundary = 1
Constructing slab geometry...
xmax = 0.016, ymax = 0.016, zmax = 10
Bz_inner = 3, Bz_outer = 3
By_inner  = 0
Done constructing slab geometry

dx*nx= 0.392699 * 16 = 6.28319, dx(m)*nx= 0.001 * 16 = 0.016, ( 1 : 0.00254648 )
dy*ny= 0.392699 * 16 = 6.28319, dy(m)*ny= 0.001 * 16 = 0.016, ( 1 : 0.00254648 )
dz*nz= 0.785398 * 8 = 6.28319, dz(m)*nz= 1.25 * 8 = 10, ( 1 : 1.59155 )

 GKSystem:getConfigurationSpaceDisjointBoxLayout 1
 m_mag_geomcoords->numBlocks() = 1
 decomp = 1, 1, 1
 nproc = 1
 nproc = 1
 nproc = 1
 GKSystem:getConfigurationSpaceDisjointBoxLayout 2
 nproc_cfg = 1
 nproc_cfg = 1
 nproc_cfg = 1
 n_loc[0] = 16
 n_loc[1] = 16
 n_loc[2] = 8
 GKSystem:getConfigurationSpaceDisjointBoxLayout 3
 domain_box.smallEnd() = (0,0,0)
 domain_box.smallEnd() + box_size-1 = (15,15,7)
 box_size = (16,16,8)
 GKSystem:getConfigurationSpaceDisjointBoxLayout 4
 GKSystem:getConfigurationSpaceDisjointBoxLayout 5
 GKSystem:getConfigurationSpaceDisjointBoxLayout 6
 GKSystem:getConfigurationSpaceDisjointBoxLayout 7
 GKSystem:getConfigurationSpaceDisjointBoxLayout 8
   Configuration space box ((0,0,0) (15,15,7) (0,0,0)) is assigned to process 0
Constructing magnetic geometry
 MagGeom::MagGeom() 1
 MagGeom::computeFieldData (FluxBox) 1
 MagGeom::computeFieldData (FluxBox) 2
 MagGeom::computeFieldData (FluxBox) 4
 MagGeom::MagGeom() 2
 MagGeom::MagGeom() plotFaceData
 MagGeom::MagGeom() plotFaceData
 MagGeom::computeFieldData (FArrayBox) 1
 MagGeom::computeFieldData (FArrayBox) 2
 MagGeom::MagGeom() 2.5
 MagGeom::MagGeom() plotCellData
 MagGeom::MagGeom() plotCellData
 MagGeom::MagGeom() 3
 MagGeom::MagGeom() 4: plotFieldAlignment()
 MagGeom::MagGeom() 6: m_coord_sys->numBlocks()=<1
 MagGeom::MagGeom() 7
 MagGeom::MagGeom() 8.
Done constructing magnetic geometry
 MagGeom::writeGeometryData() 1:3D
 MagGeom::getCellVolumes() 1
 MagGeom::getCellVolumes() 2
 coord_sys.getNumN() = 9
 MagGeom::writeGeometryData() 2
 GKSystem 5
   Velocity space box ((-8,0) (7,7) (0,0)) is assigned to process 0

Done creating velocity coordinate
dvpar*nvpar= 0.5 * 8 = 4, dv_parallel(m/s)*nvpar= 97871.5 * 8 = 782972, ( 1 : 195743 )
dmu*nmu= 0.375 * 8 = 3, dmu(J/T)*nmu= 1.20163e-17 * 8 = 9.61306e-17, ( 1 : 3.20435e-17 )

 GKSystem 6
 GKSystem:createPhaseSpace() 1
 GKSystem:createPhaseSpace() 2
 m_mag_geom_coords->numBlocks() = 1
 GKSystem:createPhaseSpace() 3
 GKSystem:createPhaseSpace() 4
 PhaseBlockCoordSys::PhaseBlockCoordSys 1.
 m_dx = (0.392699,0.392699,0.785398,0.5,0.375)
 m_mapped_cell_volume = 0.0227097
 m_mapped_face_area = (0.0578297,0.0578297,0.0289149,0.0454194,0.0605591)
 GKSystem:createPhaseSpace() 5
 decomps = (1,1,1,1,1) 
 m_phase_decomposition = 1, 1, 1, 1, 1
 m_mag_geom_type = Slab
 GKSystem:createPhaseSpace() 6
 PhaseGrid 1
 box_size = (16,16,8,16,8)
 PhaseGrid 2
 domain_box.smallEnd() = (0,0,0,-8,0)
 domain_box.smallEnd()+box_size-IntVect::Unit = (15,15,7,7,7)
 m_local_velocity_slices.size() = 1 
 procID() = 0 ((0,0,0) (15,15,7) (0,0,0)):  ((-8,0) (7,7) (0,0))
 GKSystem:createPhaseSpace() 7
   Phase space box ((0,0,0,-8,0) (15,15,7,7,7) (0,0,0,0,0)) is assigned to process 0, has 262144 valid cells and 3276800 ghost cells
 PhaseGeom 1
 PhaseGeom 2
 m_velocity_type = gyrokinetic
 m_freestream_components = (0,0,0,0,0)
 m_no_drifts = 0
 m_no_parallel_streaming = 0
 m_explicit_curvature_radius = 0
 m_second_order = 1
 PhaseGeom::define() 1
 cfg_ghostVect() =(4,4,4)
 vel_ghostVect() =(4,4)
 PhaseGeom::define() 2
 cfg_NumN = 9
 PhaseGeom::define() 3
 PhaseGeom::define() 4
 MagGeom::getMetricTerms() 1
 MagGeom::getMetricTerms() 2
 dit(a_N.dataIterator()) 
 MagGeom::getMetricTerms() 3
 dit.ok() = 1
 MagGeom::getMetricTerms() 4
 a_gradPhi.nComp() = a_tanGradN[dit].nComp() = 18
 a_phiFace.nComp() = a_N[dit].nComp() = 9
 SpaceDim = 3
 (SpaceDim-1)*a_N[dit].nComp() = 18
 MagGeom::getMetricTerms() 5
 MagGeom::getMetricTerms() 6
 PhaseGeom::define() 5
 PhaseGeom::define() 6
 MagGeom::getCellVolumes() 1
 PhaseGeom::define() 7
 PhaseGeom::define() 8
 PhaseGeom::define() 9
 PhaseGeom::define() 10
 PhaseGeom::define() 11
 PhaseGeom::define() 12
 PhaseGeom::define() 13
 PhaseGeom::define() 14
 PhaseGeom::define() 15.
 PhaseGeom 3
 GKSystem:createPhaseSpace() 8
 GKSystem 7
Adding species and constructing gyrocenter coordinates...
   hydrogen: kinetic species with mass = 1, charge = 1
 NEW ADDED:PhaseGeom::defineSpeciesState fourthOrderAverage 1
Done adding species and constructing coordinates
Adding fluid species...
Done adding confiration space variables
Adding configuration space field variables...
Done adding configuration space variables
 GKSystem 10
 GKOps 1
 GKUnits::GKUnits(ParmParse&) 1
 GKSystemBC::GKSystemBC() 1
 GKSystemBC::GKSystemBC() 2
 GKSystemBC::GKSystemBC() 3

SlabPotentialBC ================================
- variable: potential-------------
  radial_lower: 
     bc_type  = 1
     bc_value = 0
  radial_upper: 
     bc_type  = 1
     bc_value = 0
  poloidal_lower: 
     bc_type  = 1
     bc_value = 0
  poloidal_upper: 
     bc_type  = 1
     bc_value = 0
  toroidal_lower: 
     bc_type  = 1
     bc_value = 0
  toroidal_upper: 
     bc_type  = 1
     bc_value = 0
-----------------------------------------------
===============================================
 GKSystemBC::GKSystemBC() 4
 Arbitrary::Arbitrary() m_pscore->getFormula():( 0.0)
 Arbitrary::Arbitrary() m_pscore->getManipStr():(0.0)
 Arbitrary::Arbitrary() m_pscore->getPostStr():{0.0}
 Arbitrary::Arbitrary() m_pscore->getFormula():1.0
 Arbitrary::Arbitrary() m_pscore->getManipStr():1.0
 Arbitrary::Arbitrary() m_pscore->getPostStr():{1.0}
 Arbitrary::Arbitrary() m_pscore->getFormula():(1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
 Arbitrary::Arbitrary() m_pscore->getManipStr():(1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
 Arbitrary::Arbitrary() m_pscore->getPostStr():{1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}

Grid Function Library =========================

"Ion_vpar_grid_func":
Constant grid function parameters:
  value: 0

"N0_grid_func":
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

"T0_grid_func":
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

"potential_grid_func":
Arbitrary grid function parameters:
  function: ( 0.0)
  translated form: (0.0)
  postfix form: {0.0}
  coordinate type: mapped

===============================================

Kinetic Function Library =========================

"maxwellian_phase_func":
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


==================================================

SlabPhaseBC ================================
- variable: hydrogen-------------
  radial_lower: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  radial_upper: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  poloidal_lower: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  poloidal_upper: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  toroidal_lower: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  toroidal_upper: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  vpar_lower: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  vpar_upper: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  mu_lower: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  mu_upper: 
Maxwellian kinetic function parameters:
-- Density --
Arbitrary grid function parameters:
  function: (1+0.00012*exp(-((x-pi)/(2*pi*0.2))^2-((y-pi)/(2*pi*0.2))^2))+0.001*(exp(-((sqrt((x-pi)^2+(y-pi)^2)+1/4*pi)/(2*pi*0.05))^2)+exp(-((sqrt((x-pi)^2+(y-pi)^2)-1/4*pi)/(2*pi*0.05))^2))
  translated form: (1+0.00012*exp(-((x'-pi')/(2*pi'*0.2))^2-((y'-pi')/(2*pi'*0.2))^2))+0.001*(exp(-((sqrt((x'-pi')^2+(y'-pi')^2)+1/4*pi')/(2*pi'*0.05))^2)+exp(-((sqrt((x'-pi')^2+(y'-pi')^2)-1/4*pi')/(2*pi'*0.05))^2))
  postfix form: {1}{0.00012}{x'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-:}{y'[0.000000000000000e+00]}{PI'}{-}{2}{PI'}{*}{0.2}{*}{/}{2}{^}{-}{exp}{*}{+}{0.001}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{+}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{x'[0.000000000000000e+00]}{PI'}{-}{2}{^}{y'[0.000000000000000e+00]}{PI'}{-}{2}{^}{+}{sqrt}{1}{4}{/}{PI'}{*}{-}{2}{PI'}{*}{0.05}{*}{/}{2}{^}{-:}{exp}{+}{*}{+}
  coordinate type: mapped

-- Temperature --
Arbitrary grid function parameters:
  function: 1.0
  translated form: 1.0
  postfix form: {1.0}
  coordinate type: mapped

-- Vparallel --
Constant grid function parameters:
  value: 0


  logical_sheath  =  0
-----------------------------------------------
===============================================
 GKSystemBC::GKSystemBC() 4.1
 GKSystemBC::GKSystemBC() 4.2
 GKSystemBC::GKSystemBC() 5
 GKSystemBC::GKSystemBC() 6
 GKSystemBC::GKSystemBC() 7.
 GKSystemIC::GKSystemIC() 1
 GKSystemIC::GKSystemIC() 2
 GKSystemIC::GKSystemIC() 3
 GKSystemIC::GKSystemIC() 4
No collision model specified for hydrogen.
Collision model for 0	hydrogen:	None
Time integration method: rk (4)
 GKSystem 11
 GKSystem 12
Done creating GKSystem
GKSystem 13.
 Simulation 3
 Simulation 4
 GKSystem::initialize 1
 GKOps::initializeState() 1
 GKSystemIC::initializeSystem() 1
  GKSystemIC::initializePotentialField() 1
  GKSystemIC::initializePotentialField() 2
  GKSystemIC::initializePotentialField() 3
 GKSystemIC::initializeSystem() 2
 GKSystemIC::initializeKineticSpecies() 1
 GKSystemIC::initializeKineticSpecies() 2
 GKSystemIC::initializeKineticSpecies() 3
 GKSystemIC::initializeKineticSpecies() 4
 GKSystemIC::initializeKineticSpecies() 5.
 GKSystemIC::initializeSystem() 3.
 GKOps::initializeState() 2
 GKOps::initializeState() 3
  GKSystem::initialize 1.1
 GKSystem::initialize 2
 PhaseGeom::divideJonValid 1
 GKOps::initializeElecricField 1
 GKOps::initializeElecricField 2
 GKOps::initializeElecricField 3
 GKOps::initializeElecricField 4
 GKOps::initializeElecricField 5
 NEW ADDED:KineticSpecies::getGhostDBL 1
 GKOps::initializeElecricField 6
 GKOps::createGKPoisson() 1
 GKOps::createGKPoisson() 2
 GKOps::createGKPoisson() 6
 MagGeom::getCellVolumes() 1
 GKPoisson 1
 GKPoisson 2
 GKPoisson 3
 GKPoisson 4
 GKPoisson 6
 GKPoisson 7
 GKOps::createGKPoisson() 7
 GKOps::initializeElecricField 7
 GKOps::initializeElecricField 8
 GKOps::initializeElecricField 9
 GKOps::computeEField 1
 GKOps::computeEField 2
 a_E_field_cell.nComp() = 3
 GKOps::computeEField 3
 GKOps::computeEField 4
 GKOps::computeEField 5
 GKOps::computeEField 21.5
 GKOps::computeEField 22.4
 FieldSolver::computeField FArray 1
 FieldSolver::computeField FArray 2
 FieldSolver::computeField FArray 3
 FieldSolver::computeMappedField FArray 1
 FieldSolver::computeMappedField FArray 2
 FieldSolver::computeMappedField FArray 3 :3D
 FieldSolver::computeMapped3DField FArray 1
 FieldSolver::computeMapped3DField FArray 2
 FieldSolver::computeMapped3DField FArray 3
 FieldSolver::computeMapped3DField FArray 4
 FieldSolver::computeMapped3DField FArray 5
 FieldSolver::computeMapped3DField FArray 6
 FieldSolver::computeMapped3DFieldWithGhosts FArray 1
 FieldSolver::computeMapped3DFieldWithGhosts FArray 2
 FieldSolver::computeMapped3DFieldWithGhosts FArray 3
 FieldSolver::computeMapped3DFieldWithGhosts FArray 4
 FieldSolver::computeMapped3DFieldWithGhosts FArray 5
 FieldSolver::computeMapped3DFieldWithGhosts FArray 6
 FieldSolver::computeMapped3DFieldWithGhosts FArray 6.1
 FieldSolver::computeMapped3DFieldWithGhosts FArray 6.2
 FieldSolver::computeMapped3DFieldWithGhosts FArray 7
 FieldSolver::computeMapped3DFieldWithGhosts FArray 8
 FieldSolver::computeMapped3DFieldWithGhosts FArray 9
 FieldSolver::computeMapped3DField FArray 7
 FieldSolver::computeMappedField FArray 5.
 FieldSolver::computeField FArray 4
 MagGeom::unmapGradient FArray 1
 MagGeom::unmapGradient FArray 2
 MagGeom::unmapGradient FArray 3: 3D
 MagGeom::unmap3DGradient FArray 1
 a_mapped_gradient.nComp() = 3
 a_gradient.nComp() = 3
 SpaceDim = 3
 MagBlockCoordSys::getPointwiseNJInvers FArray 1
 MagBlockCoordSys::getPointwiseNJInvers FArray 2
 MagBlockCoordSys::getPointwiseNJInvers FArray 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::getPointwiseNJInvers FArray 4
 MagBlockCoordSys::getPointwiseNJInvers FArray 7
 MagGeom::unmapGradient FArray 4: 3D
 MagGeom::transformFromXYZToRPHIZ FArray 1
 MagGeom::transformFromXYZToRPHIZ FArray 2
 MagGeom::transformFromXYZToRPHIZ FArray 3.
 FieldSolver::computeField FArray 5.
 GKOps::computeEField 22.5
 FieldSolver::computeField FluxBox 1
 FieldSolver::computeField FluxBox 2
 FieldSolver::computeField FluxBox 3
 FieldSolver::computeField FluxBox 4
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 FieldSolver::computeField FluxBox 5.
 GKOps::computeEField 22.6
 GKOps::computeEField 23
 GKOps::computeEField 26.
 GKOps::initialize 11
 GKSystem::initialize 7.1
 GKSystem::initialize 8
 Simulation 5
  Distribution Function Extrema:
    Species 0:	4.52316e-06 [max]	8.0332e-11 [min]

 Simulation 6
 Simulation 6.1: writePlotFile()
m_verbosity = 10
m_max_step = 70
m_max_time = 100000
m_fixed_dt = 0.5
m_max_dt_grow = 1.1
m_initial_dt_fractiond = 0.1
m_cfl = 1
checkpoint interval = 100
checkpoint prefix = chk
plot interval = 1
plot frefix = plt
 GKSystem::writePlotFile() 0
 GKSystem::writePlotFile() 1: m_hdf_potential
 GKSystem::writePlotFile() 2: m_hdf_efield
 NEW ADDED:PhaseGeom::divideBStarParallel check the updated 1
 GKSystem::writePlotFile() 3: m_hdf_dfn
 GKSystem::writePlotFile() 4: m_hdf_dfn, bstar_par
 NEW ADDED:PhaseGeom::divideBStarParallel check the updated 1
 GKSystem::writePlotFile() 9: m_hdf_vparmu
 NEW ADDED:KineticSpecies::getGhostDBL 1
 GKSystem::writePlotFile() 10: m_hdf_density
 NEW ADDED:KineticSpecies::getGhostDBL 1
 GKSystem::writePlotFile() 11: m_hdf_ParallelMomentum
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 GKSystem::writePlotFile() 13: m_hdf_pressure
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 GKSystem::writePlotFile() 14: m_hdf_temperature
 main 5
 Simulation::advance() 1

Step 1
 PhaseGeom::divideJonValid 1
 GKOps::setElectricField 1
 GKOps::setElectricField 2:2
 GKOps::computeElectricField 1
 PhaseGeom::divideJonValid 1
 GKOps::computeEField 1
 GKOps::computeEField 2
 a_E_field_cell.nComp() = 3
 GKOps::computeEField 3
 GKOps::computeEField 4
 GKOps::computeEField 5
 GKOps::computeEField 26.
 GKOps::computeElectricField 2.
 GKOps::setElectricField 3.
 GKVlasov::computeDt(LevelData<FluxBox>,KineticSpeceisPtrVect) 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 NEW ADDED:KineticSpecies::getGhostDBL 1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKVlasov::ComputeMappedDtSpecies 1
 face_area = (0.0578297,0.0578297,0.0289149,0.0454194,0.0605591)
 mappedcellvolume = 0.0227097
 GKVlasov::ComputeMappedDtSpecies 2
 GKVlasov::ComputeMappedDtSpecies 2.1
    GKVlasov::ComputeMappedDtSpecies 2.2
    GKVlasov::ComputeMappedDtSpecies 2.2
    GKVlasov::ComputeMappedDtSpecies 2.2
    GKVlasov::ComputeMappedDtSpecies 2.2
    GKVlasov::ComputeMappedDtSpecies 2.2
 GKVlasov::ComputeMappedDtSpecies 3
 GKVlasov::ComputeMappedDtSpecies 4
 GKVlasov::ComputeMappedDtSpecies 4.1
  thisMax = 3
Vlasov operator time step (0.258191) was limited by the velocity at (X,Y,Z,vparallel,mu) = (0.0135,0.0135,1.875,-3.75,0.1875) and mapped coordinate = (13,13,1,-8,0)
The (toroidal) direction makes the largest contribution to the stable dt reciprocal at that point
 GKVlasov::ComputeMappedDtSpecies 5.
 GKVlasov::computeDt(LevelData<FluxBox>,KineticSpeceisPtrVect) 2
 GKVlasov::computeDt(LevelData<FluxBox>,KineticSpeceisPtrVect) 3.
 GKVlasov::computeTimeScale(LevelData<FluxBox>,KineticSpeciesPtrVect) 1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKVlasov::ComputeMappedTimeScaleSpecies 1
 GKVlasov::ComputeMappedTimeScaleSpecies 2.
 GKVlasov::computeTimeScale(LevelData<FluxBox>,KineticSpeciesPtrVect) 2.
 GKSystem::set_dt_es_alfven_wave() 1

m_num_cells[i]=16
m_num_cells[i]=16
m_num_cells[i]=8
m_num_cells[i]=16
m_num_cells[i]=8
dx*nx= 0.392699 * 16 = 6.28319, dx(m)*nx= 0.001 * 16 = 0.016, ( 1 : 0.00254648 )
dy*ny= 0.392699 * 16 = 6.28319, dy(m)*ny= 0.001 * 16 = 0.016, ( 1 : 0.00254648 )
dz*nz= 0.785398 * 8 = 6.28319, dz(m)*nz= 1.25 * 8 = 10, ( 1 : 1.59155 )
dvpar*nvpar= 0.5 * 8 = 4, dv_parallel(m/s)*nvpar= 97871.5 * 8 = 782972, ( 1 : 6116.97 )
 [hydrogen] mass = 1
  dvpar*nvpar= 0.5 * 8 = 4, dv_parallel(m/s)*nvpar= 97871.5 * 8 = 782972, ( 1 : 195743 )
dmu*nmu= 0.375 * 8 = 1.5, dmu(J/T)*nmu= 1.20163e-17 * 8 = 9.61306e-17, ( 1 : 4.00544e-18 )

Estimated dt
 KineticSpecies::computeVelocity() 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 1
 PhaseGeom::applyAxisymmetricCorrection 1
 PhaseGeom::applyAxisymmetricCorrection 2
 mag_block_coord_sys.isAxisymmetric =0
 PhaseGeom::applyAxisymmetricCorrection 3.
 PhaseGeom::updateVelocities 3.
 KineticSpecies::computeVelocity() 2.
unit_dimension_length [hydrogen]=1
unit_dimension_speed  [hydrogen]=195743
unit_dimension_time   [hydrogen]=5.10874e-06
[hydrogen] maxvel:phy_maxvel[0]=0:0(1:-nan)
[hydrogen] maxvel:phy_maxvel[1]=0:0(1:-nan)
[hydrogen] maxvel:phy_maxvel[2]=3.75:734036(1:195743)
[hydrogen] maxvel:phy_maxvel[3]=0:0(1:-nan)
[hydrogen] maxvel:phy_maxvel[4]=0:0(1:-nan)

dt_zpar(s)[hydrogen]=dz(m)/vparmax_z(m/s)[hydrogen]=1.25/782972=1.59648e-06
dt_zpar(-)[hydrogen]=0.3125
dt_ypar(s)[hydrogen]=dy(m)/vparmax_y(m/s)[hydrogen]=0.001/0=inf
dt_ypar(-)[hydrogen]=inf
dt_z(s)[hydrogen]=dz(m)/vmax_z(m/s)[hydrogen]=1.25/734036=1.70291e-06
dt_z(-)[hydrogen]=0.333333
dt_y(s)[hydrogen]=dy(m)/vmax_y(m/s)[hydrogen]=0.001/0=inf
dt_y(-)[hydrogen]=inf
dt_x(s)[hydrogen]=dx(m)/vmax_x(m/s)[hydrogen]=0.001/0=inf
dt_x(-)[hydrogen]=inf
dt_vpar(s)[hydrogen]=dvpar(m/s)/vmax_vpar(m/s/s)[hydrogen]=97871.5/0=inf
dt_vpar(-)[hydrogen]=inf

 GKSystem::set_dt_es_alfven_wave() 2.
  --
  Specified time step is higher than stable time step. Using subiterations.
  2 subiterations will be made with sub_dt = 0.25
  You may disable this by setting simulation.fixed_dt_subiteration = false.
  --
 Simulation::advance() 2
 Simulation::advance() 3
  --
  Subiteration:1 of 2
 GKSystem::advance 1
 GKSystem::advance 2
 TiRK:advance() i=0, m_nstages=4
 PhaseGeom::divideJonValid 1
 GKOps::explicitOp 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1.1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.2
 GKSystemBC::fillKineticSpeciesGhostCells() 1.3
SlabPhaseBC::apply() 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 0
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 2
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 3
SlabPhaseBC::apply() 2
 SlabPhaseBC::fillInflowData(): i=0, dir=3, a_time=0
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=1, dir=3, a_time=0
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=2, dir=4, a_time=0
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=3, dir=4, a_time=0
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
SlabPhaseBC::apply() 3
SlabPhaseBC::apply() 4
SlabPhaseBC::apply() 5
SlabPhaseBC::apply() 6.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.4.
 GKSystemBC::fillKineticSpeciesGhostCells() 2.
 GKOps::explicitOp 2
 GKVlasov::evalRHS() 1
 KineticSpecies::computeVelocity() 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 1
 PhaseGeom::applyAxisymmetricCorrection 1
 PhaseGeom::applyAxisymmetricCorrection 2
 mag_block_coord_sys.isAxisymmetric =0
 PhaseGeom::applyAxisymmetricCorrection 3.
 PhaseGeom::updateVelocities 3.
 KineticSpecies::computeVelocity() 2.
 GKVlasov::evalRHS() 2
 mappedAdvectionFlux.cpp:ComputeCompFaceFluxes 1
 a_u.nComp() = 1
 a_v.nComp() = 5
 SpaceDim    = 5
 GKVlasov::evalRHS() 3
 TiRK:advance() i=0
 TiRK:advance() i=1, m_nstages=4
 GKOps::setElectricField 1
 GKOps::setElectricField 2:2
 GKOps::computeElectricField 1
 PhaseGeom::divideJonValid 1
 GKOps::computeEField 1
 GKOps::computeEField 2
 a_E_field_cell.nComp() = 3
 GKOps::computeEField 3
 GKOps::computeEField 4
 GKOps::computeEField 5
 GKOps::computeEField 26.
 GKOps::computeElectricField 2.
 GKOps::setElectricField 3.
 PhaseGeom::divideJonValid 1
 GKOps::explicitOp 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1.1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.2
 GKSystemBC::fillKineticSpeciesGhostCells() 1.3
SlabPhaseBC::apply() 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 0
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 2
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 3
SlabPhaseBC::apply() 2
 SlabPhaseBC::fillInflowData(): i=0, dir=3, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=1, dir=3, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=2, dir=4, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=3, dir=4, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
SlabPhaseBC::apply() 3
SlabPhaseBC::apply() 4
SlabPhaseBC::apply() 5
SlabPhaseBC::apply() 6.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.4.
 GKSystemBC::fillKineticSpeciesGhostCells() 2.
 GKOps::explicitOp 2
 GKVlasov::evalRHS() 1
 KineticSpecies::computeVelocity() 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 1
 PhaseGeom::applyAxisymmetricCorrection 1
 PhaseGeom::applyAxisymmetricCorrection 2
 mag_block_coord_sys.isAxisymmetric =0
 PhaseGeom::applyAxisymmetricCorrection 3.
 PhaseGeom::updateVelocities 3.
 KineticSpecies::computeVelocity() 2.
 GKVlasov::evalRHS() 2
 mappedAdvectionFlux.cpp:ComputeCompFaceFluxes 1
 a_u.nComp() = 1
 a_v.nComp() = 5
 SpaceDim    = 5
 GKVlasov::evalRHS() 3
 TiRK:advance() i=1
 TiRK:advance() i=2, m_nstages=4
 GKOps::setElectricField 1
 GKOps::setElectricField 2:2
 GKOps::computeElectricField 1
 PhaseGeom::divideJonValid 1
 GKOps::computeEField 1
 GKOps::computeEField 2
 a_E_field_cell.nComp() = 3
 GKOps::computeEField 3
 GKOps::computeEField 4
 GKOps::computeEField 5
 GKOps::computeEField 26.
 GKOps::computeElectricField 2.
 GKOps::setElectricField 3.
 PhaseGeom::divideJonValid 1
 GKOps::explicitOp 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1.1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.2
 GKSystemBC::fillKineticSpeciesGhostCells() 1.3
SlabPhaseBC::apply() 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 0
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 2
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 3
SlabPhaseBC::apply() 2
 SlabPhaseBC::fillInflowData(): i=0, dir=3, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=1, dir=3, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=2, dir=4, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
 SlabPhaseBC::fillInflowData(): i=3, dir=4, a_time=0.125
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
 SlabPhaseBC::fillInflowData():after KineticFunction.assign()
SlabPhaseBC::apply() 3
SlabPhaseBC::apply() 4
SlabPhaseBC::apply() 5
SlabPhaseBC::apply() 6.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.4.
 GKSystemBC::fillKineticSpeciesGhostCells() 2.
 GKOps::explicitOp 2
 GKVlasov::evalRHS() 1
 KineticSpecies::computeVelocity() 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 1
 PhaseGeom::applyAxisymmetricCorrection 1
 PhaseGeom::applyAxisymmetricCorrection 2
 mag_block_coord_sys.isAxisymmetric =0
 PhaseGeom::applyAxisymmetricCorrection 3.
 PhaseGeom::updateVelocities 3.
 KineticSpecies::computeVelocity() 2.
 GKVlasov::evalRHS() 2
 mappedAdvectionFlux.cpp:ComputeCompFaceFluxes 1
 a_u.nComp() = 1
 a_v.nComp() = 5
 SpaceDim    = 5
 GKVlasov::evalRHS() 3
 TiRK:advance() i=2
 TiRK:advance() i=3, m_nstages=4
 GKOps::setElectricField 1
 GKOps::setElectricField 2:2
 GKOps::computeElectricField 1
 PhaseGeom::divideJonValid 1
 GKOps::computeEField 1
 GKOps::computeEField 2
 a_E_field_cell.nComp() = 3
 GKOps::computeEField 3
 GKOps::computeEField 4
 GKOps::computeEField 5
 GKOps::computeEField 26.
 GKOps::computeElectricField 2.
 GKOps::setElectricField 3.
 PhaseGeom::divideJonValid 1
 GKOps::explicitOp 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1
 GKSystemBC::fillKineticSpeciesGhostCells() 1.1
 KineticSpecies::computeMappdVelocity() 1
 PhaseGeom::updateMappedVelocities 1
 PhaseGeom::updateVelocities 1
 PhaseGeom::computeGKVelociites 1
 include_drifts, gradb, par_streaming, field_align = 1,1,1,0
 PhaseGeom::computeGKVelociites 2.
 PhaseGeom::updateVelocities 2
 a_apply_axisymmetric_correction = 0
 PhaseGeom::updateVelocities 3.
 PhaseGeom::updateMappedVelocities 2
 PhaseGeom::multNTransposePointwise 1
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 MagBlockCoordSys::compute_dXdXiCofac 1
 icomp, ind1, ind2  = 0, 0, 0
 icomp, ind1, ind2  = 1, 0, 1
 icomp, ind1, ind2  = 2, 0, 2
 icomp, ind1, ind2  = 3, 1, 0
 icomp, ind1, ind2  = 4, 1, 1
 icomp, ind1, ind2  = 5, 1, 2
 icomp, ind1, ind2  = 6, 2, 0
 icomp, ind1, ind2  = 7, 2, 1
 icomp, ind1, ind2  = 8, 2, 2
a_tmp(0) = 0.00254648
a_tmp(1) = 0
a_tmp(2) = 0
a_tmp(3) = 0
a_tmp(4) = 0.00254648
a_tmp(5) = 0
a_tmp(6) = 0
a_tmp(7) = 0
a_tmp(8) = 1.59155
 MagBlockCoordSys::compute_dXdXiCofac 2
 MagBlockCoordSys::compute_dXdXiCofac 3
 PhaseGeom::multNTransposePointwise 2.
 PhaseGeom::updateMappedVelocities 3.
 KineticSpecies::computeMappdVelocity() 2.
 GKSystemBC::fillKineticSpeciesGhostCells() 1.2
 GKSystemBC::fillKineticSpeciesGhostCells() 1.3
SlabPhaseBC::apply() 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 0, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 1, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 2, 0
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 3, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineBoundaryBoxLayouts() 1
 b, dir, isPhysicalBoundary=0, 4, 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 0
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 1
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 2
 PhaseBCUtils.H::defineInflowDataStorage() 1
 i= 3
SlabPhaseBC::apply() 2
 SlabPhaseBC::fillInflowData(): i=0, dir=3, a_time=0.25
 SlabPhaseBC::fillInflowData():before KineticFunction.assign()
