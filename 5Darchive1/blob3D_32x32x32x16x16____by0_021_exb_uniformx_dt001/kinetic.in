#####################################################
# Verbosity Definitions
#####################################################
simulation.verbosity = 10
gksystem.verbosity   = 10
gksystem.hdf_density = true
gksystem.hdf_potential = true
gksystem.hdf_temperature = true
gksystem.hdf_dfn = true
gksystem.hdf_efield = true

#gksystem.using_F0 = true
#gksystem.imposing_bc_to_perturbation = true
#gksystem.imposing_bc_to_perturbation_rescale = true
#####################################################
# Time Stepping Definitions
#####################################################
simulation.max_step            = 10000
simulation.max_time            = 100000.0
#simulation.max_dt_grow         = 1.1
#simulation.initial_dt_fraction = 0.5
#simulation.cfl_number          = 0.9
#simulation.fixed_dt           = 0.0003
simulation.fixed_dt           = 0.001
#simulation.fixed_dt_subiteration  = true
##simulation.fixed_dt           = 0.001
simulation.checkpoint_interval = 10
simulation.checkpoint_prefix   = "chk"
#simulation.restart_file = "chk1500.4d.hdf5"
simulation.plot_interval       = 1
simulation.plot_prefix         = "plt"
simulation.histories = true
simulation.1.history_field = "potential"
simulation.1.history_indices = 4 2 2 


#####################################################
# Computational Grid Definitions
#####################################################
gksystem.num_cells   = 16 16 32 24 16
gksystem.is_periodic =  1  1  1  0  0

gksystem.configuration_decomp = 4 4 4 
gksystem.velocity_decomp      =       4 4
gksystem.phase_decomp         = 4 4 4 2 1


#####################################################
# Units Definitions
#####################################################
units.number_density = 1.0e20
units.temperature    = 1.0e3
units.length         = 1.0
units.mass           = 1.0
units.magnetic_field = 1.0 

#####################################################
# Magnetic Geometry Definitions
#####################################################
gksystem.magnetic_geometry_mapping = "Slab"
gksystem.magnetic_geometry_mapping.slab.verbose  = true
gksystem.magnetic_geometry_mapping.slab.visit_plotfile  = "SlabViz"
gksystem.magnetic_geometry_mapping.slab.axisymmetric  = false
gksystem.magnetic_geometry_mapping.slab.num_quad_points = 5
gksystem.magnetic_geometry_mapping.slab.axisymmetric = false
gksystem.magnetic_geometry_mapping.slab.x_max = 0.02
gksystem.magnetic_geometry_mapping.slab.y_max = 0.02
gksystem.magnetic_geometry_mapping.slab.z_max = 0.04
gksystem.magnetic_geometry_mapping.slab.Bz_inner = 3.0
gksystem.magnetic_geometry_mapping.slab.Bz_outer = 3.0
gksystem.magnetic_geometry_mapping.slab.By_inner = 0.0
gksystem.magnetic_geometry_mapping.plot_magnetic_field = true

#####################################################
# Phase Space Geometry Definitions
#####################################################
phase_space_mapping.v_parallel_max = 4.0
phase_space_mapping.mu_max = 2.0
phase_space_mapping.velocity_type = "gyrokinetic"
#phase_space_mapping.velocity_type = "ExB"
#phase_space_mapping.velocity_type = "annular_poloidal_velocity"
#phase_space_mapping.velocity_type = "annular_radial_velocity"
#phase_space_mapping.velocity_type = "annular_radpol_velocity"
phase_space_mapping.no_drifts = false
phase_space_mapping.physical_velocity_components = true


#####################################################
# Vlasov Operator Definitions
#####################################################
gkvlasov.verbose = true
#gkvlasov.face_avg_type = uw1
#gkvlasov.face_avg_type = uw3
#gkvlasov.face_avg_type = uw5
#gkvlasov.face_avg_type = weno5
gkvlasov.face_avg_type = bweno

#####################################################
# Poisson Operator Definitions
#####################################################
gksystem.fixed_efield = true
gkpoisson.verbose = true

gkpoissonboltzmann.preserve_initial_ni_average = true

#gkpoissonboltzmann.prefactor = global_neutrality
#gkpoissonboltzmann.prefactor = global_neutrality_initial
#gkpoissonboltzmann.prefactor = fs_neutrality
#gkpoissonboltzmann.prefactor = fs_neutrality_initial
gkpoissonboltzmann.prefactor = fs_neutrality_global_ni
#gkpoissonboltzmann.prefactor = fs_neutrality_initial_fs_ni

gkpoissonboltzmann.verbose = true
gkpoissonboltzmann.nonlinear_relative_tolerance = 1.e-5
gkpoissonboltzmann.nonlinear_maximum_iterations = 20

#####################################################
# Species Definitions
#####################################################
kinetic_species.1.name   = "hydrogen"
kinetic_species.1.mass   = 2.0
kinetic_species.1.charge = 1.0

#boltzmann_electron.name = "electron"
#boltzmann_electron.mass              = 0.000544
#boltzmann_electron.charge            = -1.0
#boltzmann_electron.temperature_shape = "uniform"
#boltzmann_electron.temperature       = 1.0

#####################################################
# Initial Condition Definitions
#####################################################
#IC.potential.function = "zero_grid_func"
IC.potential.function = "potential_grid_func"
IC.hydrogen.function = "maxwellian_phase_func" 
#IC.hydrogen_0.function = "maxwellian_0_phase_func" 
#IC.electron.function = "maxwellian_0_phase_func"

#####################################################
# Boundary Condition Definitions
#####################################################
BC.hydrogen.radial_lower.function = "maxwellian_phase_func"
BC.hydrogen.radial_upper.function = "maxwellian_phase_func"
BC.hydrogen.poloidal_lower.function = "maxwellian_phase_func"
BC.hydrogen.poloidal_upper.function = "maxwellian_phase_func"
BC.hydrogen.toroidal_lower.function = "maxwellian_phase_func"
BC.hydrogen.toroidal_upper.function = "maxwellian_phase_func"
BC.hydrogen.vpar_lower.function = "maxwellian_phase_func"
BC.hydrogen.vpar_upper.function = "maxwellian_phase_func"
BC.hydrogen.mu_lower.function = "maxwellian_phase_func"
BC.hydrogen.mu_upper.function = "maxwellian_phase_func"

#BC.potential.radial_inner.type = "neumann"
#BC.potential.radial_outer.type = "neumann"
BC.potential.radial_lower.type = "neumann"
BC.potential.radial_upper.type = "neumann"
BC.potential.poloidal_lower.type = "neumann"
BC.potential.poloidal_upper.type = "neumann"
BC.potential.toroidal_lower.type = "neumann"
BC.potential.toroidal_upper.type = "neumann"

#####################################################
# Kinetic Function Definitions
#####################################################
kinetic_function_library.number = 1
kinetic_function_library.verbosity = 1
kinetic_function_library.list = "maxwellian_phase_func"

kinetic_function_library.maxwellian_phase_func.type = "maxwellian"
kinetic_function_library.maxwellian_phase_func.vparallel.function = "Ion_vpar_grid_func"
kinetic_function_library.maxwellian_phase_func.density.function = "N0_grid_func" 
kinetic_function_library.maxwellian_phase_func.temperature.function = "T0_grid_func" 

#####################################################
# Grid Function Definitions
#####################################################
grid_function_library.number = 4
grid_function_library.verbosity = 10
#grid_function_library.list = "zero_grid_func" "T0_grid_func" "N0_grid_func" "Ion_vpar_grid_func" 
grid_function_library.list = "potential_grid_func" "T0_grid_func" "N0_grid_func" "Ion_vpar_grid_func" 

#grid_function_library.zero_grid_func.type = "zero" 
grid_function_library.potential_grid_func.type = "arbitrary" 
#grid_function_library.potential_grid_func.function = "( -0.0001*exp(-(x-pi)^2/(2*pi*0.002/0.02)-(y-pi/2)^2/(2*pi*0.002/0.02))*exp(-(z-pi)^2/(2*pi*0.0008/0.02)) )"
#grid_function_library.potential_grid_func.function = "( 0.0000001*exp(-(x-pi)^2/(2*pi*0.002/0.02))*sin(y) )"
grid_function_library.potential_grid_func.function = "( 0.0000001*sin(y) )"

grid_function_library.T0_grid_func.type = "cosine"
grid_function_library.T0_grid_func.constant = 1.0
grid_function_library.T0_grid_func.amplitude = 0.
grid_function_library.T0_grid_func.mode = 1 0 0
grid_function_library.T0_grid_func.phase = 0 0 0


grid_function_library.N0_grid_func.type = "arbitrary"
#grid_function_library.N0_grid_func.function = "(1.00+exp(-(x-pi)^2/(2*pi*0.002/0.02)-(y-pi)^2/(2*pi*0.002/0.02))*exp(-(z-pi)^2/(2*pi*0.0004/0.02))    )"
grid_function_library.N0_grid_func.function = "(1.00+exp(-(x-pi)^2/(2*pi*0.002/0.02)-(y-pi)^2/(2*pi*0.002/0.02))   )"


grid_function_library.Ion_vpar_grid_func.type = "constant"
grid_function_library.Ion_vpar_grid_func.value = 0.0



